document.addEventListener("DOMContentLoaded", function () {
  // --- N∆†I ƒê·ªÇ B·∫†N VI·∫æT L·ªúI CH√öC C·ª¶A M√åNH ---
  const myBirthdayWish =
    "Ch√∫c VƒÉn D∆∞∆°ng H·ªìng V·ªπ tu·ªïi 20 th·∫≠t h·∫°nh ph√∫c, vui v·∫ª b√™n c·∫°nh nh·ªØng ng∆∞·ªùi m√† u th√≠ch. Ch√∫c u kh√¥ng ch·ªâ ng√†y sinh nh·∫≠t vui v·∫ª m√† sau n√†y, ng√†y ng√†y c≈©ng ph·∫£i vui v·∫ª. Ch√∫c u ƒë·∫°t ƒë∆∞·ª£c nh·ªØng ƒëi·ªÅu m√¨nh mu·ªën v√† nh·ªØng ƒëi·ªÅu ƒë·∫°t ƒë∆∞·ª£c ƒë·∫•y s·∫Ω l√† nh·ªØng ƒëi·ªÅu t·ªët ƒë·∫πp nh·∫•t. Tu·ªïi 20 kh√¥ng c√≤n ti√™u c·ª±c c≈©ng ch·∫≥ng c√≤n kh√≥c nh√®. Hi v·ªçng V·ªπ m·ªói ng√†y s·∫Ω th·∫≠t h·∫°nh ph√∫c v√† nh·ªØng ƒëi·ªÅu mu·ªôn phi·ªÅn s·∫Ω r·ªùi xa u.";
  // ---------------------------------------------

  const modalElement = document.querySelector(".birthday_inner__modal");
  let progress = 1;
  let mixing = false;
  let mixtimes = 0;
  let bases = 0;
  let fillings = 0;

  // --- Helper Functions for fadeIn/fadeOut ---
  function fadeOutElement(element, duration = 400, callback) {
    if (!element) return;
    element.style.transition = `opacity ${duration / 1000}s ease-out`;
    element.style.opacity = "0";
    setTimeout(() => {
      element.style.display = "none";
      if (callback) callback();
    }, duration);
  }

  function fadeInElement(
    element,
    duration = 400,
    displayType = "block",
    callback
  ) {
    if (!element) return;
    element.style.opacity = "0";
    element.style.display = displayType;
    // Force a reflow before applying the opacity transition
    element.offsetHeight;
    element.style.transition = `opacity ${duration / 1000}s ease-in`;
    element.style.opacity = "1";
    if (callback) {
      setTimeout(callback, duration);
    }
  }

  // --- Modal Functions ---
  function fire_modal(imgurl, title, content) {
    if (!modalElement) return;
    modalElement.querySelector("h1").innerHTML = title;
    modalElement.querySelector("img").setAttribute("src", imgurl);
    modalElement.querySelector("p").innerHTML = content;
    setTimeout(function () {
      modalElement.style.transform = "translateY(-50%) scale(1)";
    }, 1000);
  }

  function close_modal(currentProgress) {
    if (!modalElement) return;
    modalElement.style.transform = "translateY(-50%) scale(0)";
    setTimeout(function () {
      const stageToShow = document.querySelector(".stage" + currentProgress);
      if (stageToShow) {
        fadeInElement(stageToShow);
      }
    }, 600);
  }

  // --- Event Listener for Start Button ---
  const startButton = document.querySelector(".start");
  if (startButton) {
    startButton.addEventListener("click", function () {
      const stage1 = document.querySelector(".stage1");
      if (stage1) {
        fadeOutElement(stage1);
      }
      fire_modal(
        "https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/cake_modal.png",
        "Let‚Äôs make a cake!",
        "V√¨ h√¥m nay l√† sinh nh·∫≠t c·ªßa V·ªπ v√¨ v·∫≠y tui mu·ªën V·ªπ t·ª± t·∫°o cho m√¨nh m·ªôt chi·∫øc b√°nh kem th·∫≠t √Ω nghƒ©a v·ªõi m√†u s·∫Øc m√† V·ªπ th√≠ch. Tr·ªôn v√†o ƒë√≥ ch√∫t vui, ch√∫t m∆° v√† th·∫≠t nhi·ªÅu y√™u th∆∞∆°ng. N∆∞·ªõng trong l√≤ ·∫£o, n∆°i h·∫°nh ph√∫c √¢m th·∫ßm lan t·ªèa. R·ªìi trang tr√≠ b·∫±ng s·∫Øc m√†u m√† tr√°i tim u l·ª±a ch·ªçn. Ch√∫c V·ªπ m·ªôt sinh nh·∫≠t ·∫•m √°p v√† ng·ªçt ng√†o ‚Äî nh∆∞ ch√≠nh chi·∫øc b√°nh u t·∫°o n√™n. üéÇ‚ú®."
      );
    });
  }

  // --- Event Listener for Modal Button ---
  const modalButton = modalElement
    ? modalElement.querySelector("button")
    : null;
  if (modalButton) {
    modalButton.addEventListener("click", function () {
      progress++;
      close_modal(progress);
    });
  }

  // --- Mixer Logic ---
  const mixerButton = document.querySelector(".mixer");
  if (mixerButton) {
    mixerButton.addEventListener("click", function () {
      if (mixing === false) {
        mixing = true;
        mixtimes++;
        const spoonImg = document.querySelector(".mix_spoon img");
        if (spoonImg) {
          spoonImg.classList.add("move");
          setTimeout(function () {
            spoonImg.classList.remove("move");
            mixing = false;
          }, 1000);
        }
      }
      if (mixtimes === 6) {
        const stage2 = document.querySelector(".stage2");
        if (stage2) {
          fadeOutElement(stage2);
        }
        fire_modal(
          "https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/mix_modal.png",
          "Mix successful!",
          "Ch√∫c m·ª´ng u, h·ªón h·ª£p th·∫≠t ho√†n h·∫£o! Gi·ªù h√£y ƒë·ªï n√≥ v√†o khu√¥n b√°nh ‚Äî th·∫≠t kh√©o l√©o, nh∆∞ c√°ch u ƒëang r√≥t v√†o ƒë√≥ m·ªôt ni·ªÅm vui nh·ªè. V√† ƒë·∫øn l√∫c ƒë·∫∑t chi·∫øc khu√¥n ·∫•y v√†o l√≤ n∆∞·ªõng. Ch·ªâ c·∫ßn kho·∫£ng 3 gi√¢y th√¥i‚Ä¶ c≈©ng ƒë·ªß ƒë·ªÉ n·ªÅn b√°nh m·ªÅm x·ªëp, ·∫•m √°p nh∆∞ l√≤ng ng∆∞·ªùi ƒëang ƒë√≥n sinh nh·∫≠t."
        );
      }
    });
  }

  // --- Drag and Drop Logic ---
  const tinElement = document.querySelector(".tin");
  const ovenElement = document.querySelector(".oven");

  if (tinElement) {
    tinElement.setAttribute("draggable", "true");
    tinElement.addEventListener("dragstart", function (event) {
      event.dataTransfer.setData("text/plain", "tin");
    });
  }

  if (ovenElement) {
    ovenElement.addEventListener("dragover", function (event) {
      event.preventDefault();
    });

    ovenElement.addEventListener("drop", function (event) {
      event.preventDefault();
      if (event.dataTransfer.getData("text/plain") === "tin") {
        const stage3 = document.querySelector(".stage3");
        if (stage3) {
          fadeOutElement(stage3);
        }
        fire_modal(
          "https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/oven_modal.png",
          "Bake successful!",
          "Tuy·ªát v·ªùi! u l√†m ƒë∆∞·ª£c ƒë·∫øn ƒë√¢y th√¨ ƒë√∫ng l√† m·ªôt ƒë·∫ßu b·∫øp t√†i hoa r·ªìi ƒë·∫•y. Ph·∫ßn ƒë·∫ø b√°nh ƒë√£ ch√≠n v√†ng, m·ªÅm x·ªëp v√† th∆°m ƒë·∫øn nao l√≤ng. Gi·ªù l√† l√∫c bi·∫øn n√≥ th√†nh m·ªôt tuy·ªát ph·∫©m ng·ªçt ng√†o ‚Äî h√£y k·∫øt h·ª£p c√πng m·ª©t d√¢u, m·ª©t cam, s√¥-c√¥-la, v√† th·∫≠t nhi·ªÅu ƒëi·ªÅu ngon l√†nh kh√°c. Chi·∫øc b√°nh sinh nh·∫≠t m∆° ∆∞·ªõc ƒëang d·∫ßn th√†nh h√¨nh ‚Äî theo c√°ch m√† ch·ªâ ri√™ng u m·ªõi t·∫°o n√™n ƒë∆∞·ª£c. üéÇüí´"
        );
      }
    });
  }

  // --- Cake Building Logic ---
  const cakemakeElement = document.querySelector(".cakemake");
  const spongesContainer = document.querySelector(".sponges");
  const fillingsContainer = document.querySelector(".fillings");
  const spongesCountSpan = spongesContainer
    ? spongesContainer.querySelector("h5 span")
    : null;
  const fillingsCountSpan = fillingsContainer
    ? fillingsContainer.querySelector("h5 span")
    : null;

  function add_sponge(type) {
    if (!cakemakeElement || !spongesCountSpan) return;
    const spongeHtml = `<div style="width:${
      200 - bases * 20
    }px" class="sponge sponge-${type}"><div></div><div></div><div></div><div></div><div></div></div>`;
    cakemakeElement.insertAdjacentHTML("afterbegin", spongeHtml);
    bases++; // Increment here after using the value
    spongesCountSpan.innerHTML = bases;
  }

  function add_filling(type) {
    if (!cakemakeElement || !fillingsCountSpan) return;
    const fillingHtml = `<div style="width:${
      200 - bases * 20
    }px" class="filling filling-${type}"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>`;
    cakemakeElement.insertAdjacentHTML("afterbegin", fillingHtml);
    fillings++; // Increment here
    fillingsCountSpan.innerHTML = fillings;
  }

  if (spongesContainer) {
    const spongeItems = spongesContainer.querySelectorAll(".item_inner");
    spongeItems.forEach((item) => {
      item.addEventListener("click", function () {
        if (bases < 5) {
          spongesContainer.classList.add("inactive");
          if (fillingsContainer) fillingsContainer.classList.remove("inactive");
          const type = this.classList.item(this.classList.length - 1);
          add_sponge(type);
        }
        if (bases >= 5) {
          spongesContainer.classList.add("inactive");
        }
      });
    });
  }

  if (fillingsContainer) {
    const fillingItems = fillingsContainer.querySelectorAll(".item_inner");
    fillingItems.forEach((item) => {
      item.addEventListener("click", function () {
        if (fillings < 6) {
          fillingsContainer.classList.add("inactive");
          if (spongesContainer) spongesContainer.classList.remove("inactive");
          const type = this.classList.item(this.classList.length - 1);
          add_filling(type);
        }
        if (fillings >= 6) {
          fillingsContainer.classList.add("inactive");
        }
      });
    });
  }

  const startAgainButton = document.querySelector(".startagain");
  if (startAgainButton) {
    startAgainButton.addEventListener("click", function () {
      if (cakemakeElement) {
        cakemakeElement.innerHTML = '<div class="base"></div>';
      }
      bases = 0;
      fillings = 0;
      if (spongesCountSpan) spongesCountSpan.innerHTML = bases;
      if (fillingsCountSpan) fillingsCountSpan.innerHTML = fillings;

      if (fillingsContainer) fillingsContainer.classList.remove("inactive");
      if (spongesContainer) spongesContainer.classList.remove("inactive");
      fillingsContainer.classList.add("inactive");
    });
  }

  // --- Finishing Functions ---
  function add_candle() {
    if (!cakemakeElement) return;

    const candleHtml =
      '<div class="candle"><img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/217233/candle.png" /></div>';
    cakemakeElement.insertAdjacentHTML("afterbegin", candleHtml);

    // Show the birthday text
    const birthdayText = document.querySelector(".birthday-text");
    if (birthdayText) {
      setTimeout(() => {
        fadeInElement(birthdayText, 800, "block");
      }, 1200);
    }

    // Show the final buttons
    const finalButtons = document.querySelector(".final-buttons");
    if (finalButtons) {
      setTimeout(function () {
        fadeInElement(finalButtons, 400, "flex");
      }, 2200);
    }
  }

  function fin() {
    const elementsToFade = document.querySelectorAll(
      ".stage4 h1, .stage4 h2, .options, .startagain, .add"
    );
    elementsToFade.forEach((el) => fadeOutElement(el));

    setTimeout(function () {
      if (cakemakeElement) {
        fadeInElement(cakemakeElement);
        cakemakeElement.style.transition = "margin-top 1s ease";
        cakemakeElement.style.marginTop = "-20px";
      }
    }, 1000);
    add_candle();
  }

  const addButton = document.querySelector(".add");
  if (addButton) {
    addButton.addEventListener("click", fin);
  }

  // --- New Wish Modal Logic ---
  const wishBtn = document.querySelector(".wish-btn");
  const wishModal = document.querySelector(".birthday_inner__wish-modal");
  const closeWishBtn = document.querySelector(".close-wish-modal");
  const wishParagraph = wishModal ? wishModal.querySelector("p") : null;

  if (wishBtn && wishModal && wishParagraph) {
    wishBtn.addEventListener("click", function () {
      wishParagraph.textContent = myBirthdayWish;
      wishModal.style.transform = "translate(-50%, -50%) scale(1)";
    });
  }

  if (closeWishBtn && wishModal) {
    closeWishBtn.addEventListener("click", function () {
      wishModal.style.transform = "translate(-50%, -50%) scale(0)";
    });
  }

  // --- Final Buttons Logic ---
  const saButton = document.querySelector(".sa");
  if (saButton) {
    saButton.addEventListener("click", function () {
      window.location.reload();
    });
  }
});
